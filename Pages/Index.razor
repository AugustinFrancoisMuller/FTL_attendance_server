@page "/"
@using Microsoft.AspNetCore
@using System.Drawing;
@using QRCoder;
@using System.Drawing.Imaging;
@using System.Globalization;


<PageTitle>QR Code Generator</PageTitle>




Update HTML Div Every 10 Seconds

<div id="updateDiv">@currentTime</div>
<img id="updateDiv" src="@QRByte" width="600"/>


<div class="input-group">
    <div class="col-sm-6">
        <label class="mb-3">QR Code Text</label>
        <input type="text" @bind-value="QRCodeText" placeholder="Enter your text" class="form-control mb-4" />
        <button @onclick="GenerateQRCode" class="btn btn-success">Generate QR Code</button>
    </div>
</div>





@code {
    public string QRCodeText = "";
    public string QRByte = "";



    private string currentTime;
    private Timer timer;

    protected override void OnInitialized()
    {
        timer = new Timer(UpdateTime, null, 0, 1000); // 10 seconds delay
    }

    private void UpdateTime(object state)
    {
        currentTime = DateTime.Now.ToString("HH:mm:ss");
        GenerateQRCode();
        InvokeAsync(StateHasChanged); // Notify Blazor to update the UI
    }

    public void Dispose()
    {
        timer.Dispose();
    }


    public void GenerateQRCode()
    {
        if (!string.IsNullOrEmpty(QRCodeText))
        {
            QRCodeText = currentTime;
            using MemoryStream ms = new();
            QRCodeGenerator qrCodeGenerate = new();
            QRCodeData qrCodeData = qrCodeGenerate.CreateQrCode(QRCodeText, QRCodeGenerator.ECCLevel.Q);
            QRCode qrCode = new(qrCodeData);

            using Bitmap qrBitMap = qrCode.GetGraphic(20);
            qrBitMap.Save(ms, ImageFormat.Png);
            string base64 = Convert.ToBase64String(ms.ToArray());
            QRByte = string.Format("data:image/png;base64,{0}", base64);
        }
    }



    void InitializePage()
{
    GenerateQRCode();
}
}
